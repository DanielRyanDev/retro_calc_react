{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","sum","setSum","isError","message","error","setError","className","calcButtons","map","item","index","style","onClick","val","undefined","Error","joinedSum","join","newSum","evaluate","storedSum","shift","err","handleButton","alias","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oyBAsDeA,EAhDH,WACV,MAAsBC,mBAAS,CAAC,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA0BF,mBAAS,CAAEG,SAAS,EAAOC,QAAS,KAA9D,mBAAOC,EAAP,KAAcC,EAAd,KA2BA,OACE,sBAAKC,UAAU,MAAf,UACE,mDACCF,EAAMF,SAAW,qBAAKI,UAAU,WAAf,+DAElB,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBN,IACzB,qBAAKM,UAAU,UAAf,SACGC,EAAYC,KAAI,SAACC,EAAMC,GAAP,OACf,wBAAQJ,UAAS,cAASG,EAAKE,OAAqBC,QAAS,kBAlClD,SAACC,GACpB,IAGE,GAFAR,EAAS,CAAEH,SAAS,EAAOC,QAAS,UAExBW,IAARD,EACF,MAAM,IAAIE,MAAM,yBACX,GAAY,UAARF,EACTZ,EAAO,CAAC,SACH,GAAY,MAARY,EAAa,CACtB,IAAIG,EAAYhB,EAAIiB,KAAK,IACrBC,EAASC,YAASH,GACtBf,EAAO,CAACiB,QACH,CACL,IAAIE,EAAS,sBAAOpB,GAAP,CAAYa,IACJ,IAAjBO,EAAU,IACZA,EAAUC,QAEZpB,EAAOmB,IAET,MAAOE,GACPjB,EAAS,CAAEH,SAAS,EAAMC,QAASmB,IACnCrB,EAAO,CAAC,KAaiEsB,CAAad,EAAKI,MAArF,SACGJ,EAAKe,MAAQf,EAAKe,MAAQf,EAAKI,KADWH,eChC1Ce,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67768baa.chunk.js","sourcesContent":["import \"./App.css\"\nimport { useState } from \"react\"\nimport { evaluate } from \"mathjs\"\n\nimport calcButtons from \"./buttons.json\"\n\nconst App = () => {\n  const [sum, setSum] = useState([0])\n  const [error, setError] = useState({ isError: false, message: \"\" })\n\n  const handleButton = (val) => {\n    try {\n      setError({ isError: false, message: \"\" })\n\n      if (val === undefined) {\n        throw new Error(\"Button is not defined\")\n      } else if (val === \"clear\") {\n        setSum([0])\n      } else if (val === \"=\") {\n        let joinedSum = sum.join(\"\")\n        let newSum = evaluate(joinedSum)\n        setSum([newSum])\n      } else {\n        let storedSum = [...sum, val]\n        if (storedSum[0] === 0) {\n          storedSum.shift()\n        }\n        setSum(storedSum)\n      }\n    } catch (err) {\n      setError({ isError: true, message: err })\n      setSum([0])\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>RETRO CALCULATOR!</h1>\n      {error.isError && <div className=\"errorMsg\">⚠️INVALID INPUT: try again!⚠️</div>}\n\n      <div className=\"calcWrapper\">\n        <div className=\"screen\">{sum}</div>\n        <div className=\"buttons\">\n          {calcButtons.map((item, index) => (\n            <button className={`btn ${item.style}`} key={index} onClick={() => handleButton(item.val)}>\n              {item.alias ? item.alias : item.val}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}